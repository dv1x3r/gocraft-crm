package component

import (
	"fmt"
	"gostart-crm/internal/app/model"
	"time"
)

templ ClientHead(cp CoreParams) {
	if cp.DebugMode {
		<link rel="stylesheet" href={ fmt.Sprintf("/css/client.css?v=%d", time.Now().Unix()) }/>
		<script type="module" src={ fmt.Sprintf("/js/client.js?v=%d", time.Now().Unix()) }></script>
	} else {
		<link rel="stylesheet" href={ fmt.Sprintf("/css/client.css?v=%d", startTime) }/>
		<script type="module" src={ fmt.Sprintf("/js/client.js?v=%d", startTime) }></script>
	}
}

templ Client(cp CoreParams) {
	@Core(cp, ClientHead(cp)) {
		<div class="bg-gradient-to-r from-slate-950 from-10% to-gray-900 text-white h-screen">
			{ children... }
		</div>
	}
}

type ClientMainPageParams struct {
	Core         CoreParams
	CategoryTree model.Category
	Products     []model.Product
	Filter       *model.Filter
}

templ ClientMainPage(params ClientMainPageParams) {
	@Client(params.Core) {
		<div class="flex items-center justify-center h-full">
			// for _, category := range params.CategoryTree.Children {
			@Categories(params.CategoryTree)
			// }
		</div>
	}
}

templ Categories(root model.Category) {
	<div class="flex items-center gap-4 p-4 h-full">
		<div class="mx-auto">
			for _, category := range root.Children {
				@CategoryCard(category)
			}
		</div>
	</div>
}

templ CategoryCard(category model.Category) {
	<div class="flex flex-col p-4 rounded shadow-lg">
		<section class="border-2 border-gray-700 rounded-lg p-2">
			<header class="text-slate-100">
				if category.Icon != nil {
					<span class={ *category.Icon }></span>
				}
				<span>{ category.Name } </span>
			</header>
			<div class="">
				<p class="text-slate-600 text-sm">Description: { category.Name }</p>
			</div>
		</section>
	</div>
}
